import React, { useState, useEffect } from 'react';
import styled, { keyframes, css } from 'styled-components';

const pathParams = [
  '776.9541625976562',
  '749.0576171875',
  '454.08013916015625',
  '776.9527587890625',
  '346.7201843261719',
  '588.2781372070312',
  '708.840087890625',
  '838.8527221679688',
];

const loadingAnimation = keyframes`
  to {
    stroke-dashoffset: 0;
  }
`;

const running = css`
  animation: ${loadingAnimation} 3s ease-in-out infinite alternate;
`;

const style = css`
  ${pathParams.map((it, i) => css`
    path:nth-child(${i + 1}) { 
      stroke-dasharray: ${it};
      stroke-dashoffset: ${props => props.stopAnim ? 0 : it};
      stroke-width: 2px;
      stroke: ${props => props.color};
      fill: ${props => props.stopAnim ? props.color : 'transparent'};
      ${props => !props.stopAnim ? running : '' }
      transition: all 0.5s;
    }`
  )}
`;

const Wrapper = styled.div`
text-align: center;
  svg {
    width: 120%;
    opacity: ${props => props.stopAnim ? 0 : 1 };
    transition: all 1.5s;
    transition-delay: 1s;
    ${style}
  }
`;

const Center = styled.div`
  text-align: center;
  svg {
    width: 80%;
  }
`;

const InfinityLogo = () => (
  <Center>
  <svg 
      xmlns="http://www.w3.org/2000/svg" 
      viewBox="0 0 477.867 477.867" 
    >
      <path d="M375.467,136.533c-53.333,0-110.933,51.661-136.533,77.534c-25.6-25.873-83.2-77.534-136.533-77.534
        c-64.119,0-102.4,38.281-102.4,102.4s38.281,102.4,102.4,102.4c53.333,0,110.933-51.661,136.533-77.534
        c25.6,25.873,83.2,77.534,136.533,77.534c64.12,0,102.4-38.281,102.4-102.4S439.586,136.533,375.467,136.533z M102.4,307.2
        c-45.295,0-68.267-22.972-68.267-68.267s22.972-68.267,68.267-68.267c37.547,0,87.381,42.308,113.118,68.267
        C189.833,264.926,140.1,307.2,102.4,307.2z M375.467,307.2c-37.547,0-87.381-42.308-113.118-68.267
        c25.6-25.975,75.418-68.267,113.118-68.267c45.295,0,68.267,22.972,68.267,68.267S420.762,307.2,375.467,307.2z"/>
    </svg>
  </Center>
);

const Logo = ({ loading}) => {
  const [ stopIteration, setStopIteration ] = useState(false);
  const [ iterationCount, setIterationCount ] = useState(0);

  function handleIteration() {
    setIterationCount(i => i + 1);
    if(!loading && Math.floor(iterationCount / 8) % 2 === 0) setStopIteration(true);
  }
  
  return (
    <Wrapper 
      isLoading={loading} 
      stopAnim={stopIteration} 
      color="#fff"
      onAnimationIteration={handleIteration}
    >
      <svg width="988" height="168" viewBox="0 0 988 168" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M5.45996 84.2199C5.45996 69.2599 8.83329 55.8399 15.58 43.9599C22.3266 31.9333 31.4933 22.5466 43.08 15.7999C54.8133 9.05327 67.7933 5.67993 82.02 5.67993C98.74 5.67993 113.333 9.71327 125.8 17.7799C138.267 25.8466 147.36 37.2866 153.08 52.0999H129.1C124.847 42.8599 118.687 35.7466 110.62 30.7599C102.7 25.7733 93.1666 23.2799 82.02 23.2799C71.3133 23.2799 61.7066 25.7733 53.2 30.7599C44.6933 35.7466 38.02 42.8599 33.18 52.0999C28.34 61.1933 25.92 71.8999 25.92 84.2199C25.92 96.3933 28.34 107.1 33.18 116.34C38.02 125.433 44.6933 132.473 53.2 137.46C61.7066 142.447 71.3133 144.94 82.02 144.94C93.1666 144.94 102.7 142.52 110.62 137.68C118.687 132.693 124.847 125.58 129.1 116.34H153.08C147.36 131.007 138.267 142.373 125.8 150.44C113.333 158.36 98.74 162.32 82.02 162.32C67.7933 162.32 54.8133 159.02 43.08 152.42C31.4933 145.673 22.3266 136.36 15.58 124.48C8.83329 112.6 5.45996 99.1799 5.45996 84.2199Z" stroke="black" strokeWidth="10" mask="url(#path-1-outside-1)"/>
        <path d="M273.521 126.9H206.641L194.321 161H173.201L228.641 8.53993H251.741L306.961 161H285.841L273.521 126.9ZM267.801 110.62L240.081 33.1799L212.361 110.62H267.801Z" stroke="black" strokeWidth="10" mask="url(#path-1-outside-1)"/>
        <path d="M351.144 144.72H404.824V161H331.124V7.65993H351.144V144.72Z" stroke="black" strokeWidth="10" mask="url(#path-1-outside-1)"/>
        <path d="M418.604 84.2199C418.604 69.2599 421.978 55.8399 428.724 43.9599C435.471 31.9333 444.638 22.5466 456.225 15.7999C467.958 9.05327 480.938 5.67993 495.165 5.67993C511.885 5.67993 526.478 9.71327 538.944 17.7799C551.411 25.8466 560.504 37.2866 566.224 52.0999H542.244C537.991 42.8599 531.831 35.7466 523.764 30.7599C515.844 25.7733 506.311 23.2799 495.165 23.2799C484.458 23.2799 474.851 25.7733 466.345 30.7599C457.838 35.7466 451.164 42.8599 446.324 52.0999C441.484 61.1933 439.065 71.8999 439.065 84.2199C439.065 96.3933 441.484 107.1 446.324 116.34C451.164 125.433 457.838 132.473 466.345 137.46C474.851 142.447 484.458 144.94 495.165 144.94C506.311 144.94 515.844 142.52 523.764 137.68C531.831 132.693 537.991 125.58 542.244 116.34H566.224C560.504 131.007 551.411 142.373 538.944 150.44C526.478 158.36 511.885 162.32 495.165 162.32C480.938 162.32 467.958 159.02 456.225 152.42C444.638 145.673 435.471 136.36 428.724 124.48C421.978 112.6 418.604 99.1799 418.604 84.2199Z" stroke="black" strokeWidth="10" mask="url(#path-1-outside-1)"/>
        <path d="M616.046 7.65993V161H596.026V7.65993H616.046Z" stroke="black" strokeWidth="10" mask="url(#path-1-outside-1)"/>
        <path d="M736.846 7.65993V23.9399H670.187V75.6399H724.307V91.9199H670.187V161H650.167V7.65993H736.846Z" stroke="black" strokeWidth="10" mask="url(#path-1-outside-1)"/>
        <path d="M781.046 23.9399V75.1999H836.926V91.6999H781.046V144.5H843.526V161H761.026V7.43993H843.526V23.9399H781.046Z" stroke="black" strokeWidth="10" mask="url(#path-1-outside-1)"/>
        <path d="M954.559 161L918.039 98.2999H893.839V161H873.819V7.65993H923.319C934.906 7.65993 944.659 9.63994 952.579 13.5999C960.646 17.5599 966.659 22.9133 970.619 29.6599C974.579 36.4066 976.559 44.1066 976.559 52.7599C976.559 63.3199 973.479 72.6333 967.319 80.6999C961.306 88.7666 952.212 94.1199 940.039 96.7599L978.539 161H954.559ZM893.839 82.2399H923.319C934.172 82.2399 942.312 79.5999 947.739 74.3199C953.165 68.8933 955.879 61.7066 955.879 52.7599C955.879 43.6666 953.165 36.6266 947.739 31.6399C942.459 26.6533 934.319 24.1599 923.319 24.1599H893.839V82.2399Z" stroke="black" strokeWidth="10" mask="url(#path-1-outside-1)"/>
      </svg>
    </Wrapper>
  );
}

export default Logo;